[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v                  # verbose output
    -ra                 # show extra test summary info
    --strict-markers    # treat unregistered markers as errors
    --tb=short         # shorter traceback format
    --cov=.            # measure coverage
    --cov-report=term  # terminal coverage report
    --cov-report=html  # HTML coverage report
    --cov-branch       # branch coverage measurement
    --no-cov-on-fail   # don't report coverage if tests fail

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    ui: marks tests as UI tests
    network: marks tests requiring network access
    plugin: marks tests for plugin system
    service: marks tests for services
    core: marks tests for core functionality
    utils: marks tests for utilities

# Test categories
# Run specific categories with: pytest -m category_name
# Example: pytest -m "not slow"
#          pytest -m "integration and not network"

# Environment variables
env =
    D:PYTHONPATH=.
    D:TESTING=true

# Coverage configuration
[coverage:run]
branch = True
source = .
omit =
    tests/*
    setup.py
    scripts/*
    docs/*
    .venv/*
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError
    def main()
